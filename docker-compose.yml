# 基础配置 - 适用于生产和开发环境
x-app-base: &app-base
  build:
    context: .
    dockerfile: Dockerfile
    target: runtime
  env_file:
    - .env
  restart: unless-stopped
  depends_on:
    postgres:
      condition: service_healthy

# 数据库配置
x-postgres-base: &postgres-base
  image: postgres:16-alpine
  restart: unless-stopped
  environment:
    POSTGRES_DB: ${DB_NAME:-policr_mini}
    POSTGRES_USER: ${DB_USER:-postgres}
    POSTGRES_PASSWORD: ${DB_PASS:-postgres}
  healthcheck:
    test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
    interval: 10s
    timeout: 5s
    retries: 5

services:
  # 应用服务
  app:
    <<: *app-base
    ports:
      - "${POLICR_MINI_SERVER_PORT:-4000}:${POLICR_MINI_SERVER_PORT:-4000}"
      - "${POLICR_MINI_BOT_WEBHOOK_SERVER_PORT:-8489}:${POLICR_MINI_BOT_WEBHOOK_SERVER_PORT:-8489}"
    volumes:
      - app_assets:${POLICR_MINI_BOT_ASSETS_PATH:-/app/_assets}
    environment:
      # 数据库配置 - 构建 URL
      POLICR_MINI_DATABASE_URL: "postgresql://${DB_USER:-postgres}:${DB_PASS:-postgres}@${DB_HOST:-postgres}:${DB_PORT:-5432}/${DB_NAME:-policr_mini}"
      POLICR_MINI_DATABASE_POOL_SIZE: ${POLICR_MINI_DATABASE_POOL_SIZE:-10}
      # 服务器配置
      POLICR_MINI_SERVER_ROOT_URL: ${POLICR_MINI_SERVER_ROOT_URL}
      POLICR_MINI_SERVER_SECRET_KEY_BASE: ${POLICR_MINI_SERVER_SECRET_KEY_BASE}
      POLICR_MINI_SERVER_PORT: ${POLICR_MINI_SERVER_PORT:-4000}
      # Bot 配置
      POLICR_MINI_BOT_NAME: ${POLICR_MINI_BOT_NAME}
      POLICR_MINI_BOT_TOKEN: ${POLICR_MINI_BOT_TOKEN}
      POLICR_MINI_BOT_OWNER_ID: ${POLICR_MINI_BOT_OWNER_ID}
      POLICR_MINI_BOT_ASSETS_PATH: ${POLICR_MINI_BOT_ASSETS_PATH:-/app/_assets}
      POLICR_MINI_BOT_WORK_MODE: ${POLICR_MINI_BOT_WORK_MODE:-polling}
      POLICR_MINI_BOT_API_BASE_URL: ${POLICR_MINI_BOT_API_BASE_URL:-https://api.telegram.org}
      # Webhook 配置
      POLICR_MINI_BOT_WEBHOOK_URL: ${POLICR_MINI_BOT_WEBHOOK_URL}
      POLICR_MINI_BOT_WEBHOOK_SERVER_PORT: ${POLICR_MINI_BOT_WEBHOOK_SERVER_PORT:-8489}
      # 验证码配置
      POLICR_MINI_BOT_GRID_CAPTCHA_INDI_WIDTH: ${POLICR_MINI_BOT_GRID_CAPTCHA_INDI_WIDTH:-180}
      POLICR_MINI_BOT_GRID_CAPTCHA_INDI_HEIGHT: ${POLICR_MINI_BOT_GRID_CAPTCHA_INDI_HEIGHT:-120}
      POLICR_MINI_BOT_GRID_CAPTCHA_WATERMARK_FONT_FAMILY: ${POLICR_MINI_BOT_GRID_CAPTCHA_WATERMARK_FONT_FAMILY:-Lato}
      # 功能配置
      POLICR_MINI_BOT_AUTO_GEN_COMMANDS: ${POLICR_MINI_BOT_AUTO_GEN_COMMANDS:-false}
      POLICR_MINI_BOT_MOSAIC_METHOD: ${POLICR_MINI_BOT_MOSAIC_METHOD:-spoiler}
      POLICR_MINI_UNBAN_METHOD: ${POLICR_MINI_UNBAN_METHOD:-until_date}
      POLICR_MINI_OPTS: ${POLICR_MINI_OPTS}
      # InfluxDB 配置（可选）
      POLICR_MINI_INFLUX_TOKEN: ${POLICR_MINI_INFLUX_TOKEN}
      POLICR_MINI_INFLUX_BUCKET: ${POLICR_MINI_INFLUX_BUCKET:-policr_mini_prod}
      POLICR_MINI_INFLUX_ORG: ${POLICR_MINI_INFLUX_ORG:-policr_mini}
      POLICR_MINI_INFLUX_HOST: "${INFLUXDB_PROTOCOL:-http}://${INFLUXDB_HOST:-influxdb}:${INFLUXDB_PORT:-8086}"
      # Google Analytics（可选）
      POLICR_MINI_GOOGLE_ANALYTICS_ID: ${POLICR_MINI_GOOGLE_ANALYTICS_ID}
      # Redis 配置 - 构建 URL
      REDIS_URL: "redis://${REDIS_PASSWORD:+:${REDIS_PASSWORD}@}${REDIS_HOST:-redis}:${REDIS_PORT:-6379}/${REDIS_DB:-0}"
      # 功能开关
      ENABLE_REDIS: ${ENABLE_REDIS:-false}
      ENABLE_INFLUXDB: ${ENABLE_INFLUXDB:-false}

  # PostgreSQL 数据库
  postgres:
    <<: *postgres-base
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME:-policr_mini}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-postgres}

  # Redis 缓存
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: >
      redis-server
      --appendonly yes
      ${REDIS_PASSWORD:+--requirepass ${REDIS_PASSWORD}}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "${REDIS_PASSWORD:+-a ${REDIS_PASSWORD}}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - redis

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  app_assets: